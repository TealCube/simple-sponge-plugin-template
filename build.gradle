import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'com.github.hierynomus.license' version '0.11.0'
    //id 'com.github.johnrengelman.shadow' version '1.2.2'
}

ext.projectName = 'SimplePluginTemplate'
ext.packaging = 'jar'
ext.author = 'ToppleTheNun'
ext.authorUrl = 'https://github.com/Nunnery'
ext.inceptionYear = '2015'

group = 'com.tealcube.minecraft.sponge'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    maven {
        name = 'sponge-repo'
        url = 'http://repo.spongepowered.org/maven'
    }
    mavenCentral()
}

dependencies {
    compile group: 'org.spongepowered', name: 'spongeapi', version: '2.1-SNAPSHOT', changing: false
}

sourceSets {
    // Creates a templates SourceSet in order to allow templates to be filtered
    templates {
        output.classesDir = "$buildDir/templates"
    }
    main {
        // Adds the output of the templates SourceSet to the Java sources of the main SourceSet
        java.srcDir(sourceSets.templates.output.classesDir)
    }
}

processResources {
    filter ReplaceTokens, tokens: [
            VERSION : version + "-" + (System.getenv("BUILD_NUMBER") ?: "0"),
            NAME    : System.getenv("JOB_NAME") ?: project.name,
            ARTIFACT: project.name
    ]
}

// Processes the Java templates and outputs them for the compiler to pick up
task processTemplates(type: Copy) {
    from sourceSets.templates.java
    into sourceSets.templates.output.classesDir
    filter ReplaceTokens, tokens: [
            VERSION : version + "+" + (System.getenv("BUILD_NUMBER") ?: "0"),
            NAME    : System.getenv("JOB_NAME") ?: project.name,
            ARTIFACT: project.name
    ]
}
compileJava.dependsOn processTemplates

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//shadowJar {
//    dependencies {
//        exclude(dependency('org.spongepowered:spongeapi'))
//    }
//}
//build.dependsOn shadowJar

license {
    ext.name = rootProject.projectName
    ext.author = rootProject.author
    ext.url = rootProject.authorUrl
    ext.year = rootProject.inceptionYear

    header file('HEADER')

    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

publishing {
    publications {
        java(MavenPublication) {
            artifactId project.getName().toLowerCase()
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

//            artifact shadowJar
        }
    }
    repositories {
        maven {
            url "http://maven.tealcube.com/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}/"
            name "TealCube"
            credentials {
                username System.getenv("nexus.username") ?: nexusUsername
                password System.getenv("nexus.password") ?: nexusPassword
            }
        }
    }
}

// If in a continuous integration environment (CI),
// refresh any modules marked as changing
configurations.all {
    if (System.getenv("BUILD_NUMBER") != null) {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}